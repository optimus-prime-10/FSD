# String Slicing in JavaScript

## What is String Slicing?
String slicing lets you extract parts of a string by 
specifying start and end positions. Think of it like 
cutting a piece of bread - you choose where to start 
and where to end.

## The Slice Function
Use `.slice(start, end)` to extract characters from 
a string. The function takes two numbers:
- Start position (inclusive)
- End position (exclusive)

## Important Rules
1. Programmers count from 0, not 1
2. First character is at position 0
3. End position is NOT included in the result
4. Formula: characters extracted = end - start

## Examples

### Basic Slicing
```javascript
let name = "Somebody";

name.slice(0, 1);    // Returns "A" (first character)
name.slice(5, 6);    // Returns "a" (last character)
name.slice(0, 3);    // Returns "Ang" (first 3 characters)
name.slice(1, 5);    // Returns "ngel" (characters 1-4)
```

### String "abc" Example
```javascript
let text = "abc";

text.slice(0, 1);    // Returns "a"
text.slice(1, 3);    // Returns "bc"
text.slice(0, 2);    // Returns "ab"
```

## Twitter Character Counter Challenge
Create a program that limits tweets to 140 characters:

### Method 1: Using Variables
```javascript
let tweet = prompt("Compose your tweet:");
let tweetUnder140 = tweet.slice(0, 140);
alert(tweetUnder140);
```

### Method 2: Simplified (One Line)
```javascript
alert(prompt("Compose your tweet:").slice(0, 140));
```

## How It Works
- `prompt()` gets user input
- `.slice(0, 140)` extracts first 140 characters
- `alert()` shows the result

## Key Points
- Slice extracts characters from start to end-1
- Position 0 is always the first character
- You can chain functions together
- Variables are optional but make code readable
- Perfect for enforcing character limits

## Common Use Cases
- Truncating long text
- Extracting file extensions
- Getting first/last characters
- Creating substrings
- Twitter-style character limits
